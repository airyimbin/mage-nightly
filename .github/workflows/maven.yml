name: Nightly Maven Build (Java 11 + JavaFX)

on:
  schedule:
    - cron: "0 6 * * *"   # 06:00 UTC, runs after sync workflow
  workflow_dispatch: {}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # create releases & upload assets

    steps:
      - name: Check out repo (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Liberica JDK 11 (with JavaFX) + Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: liberica
          java-version: '11'
          java-package: jdk+fx
          cache: maven

      - name: Build root
        run: mvn -B -ntp clean install -DskipTests

      - name: Build Mage.Client assembly
        working-directory: Mage.Client
        run: mvn -B -ntp -DskipTests assembly:single

      - name: Build Mage.Server assembly
        working-directory: Mage.Server
        run: mvn -B -ntp -DskipTests assembly:single

      - name: Verify artifacts exist
        run: |
          test -f Mage.Client/target/mage-client.zip
          test -f Mage.Server/target/mage-server.zip

      - name: Build combined mage-nightly.zip from upstream
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq unzip zip

          echo "Fetching latest XMage release from magefree/mage..."
          rel_json=$(curl -sS -H "Authorization: Bearer ${GH_TOKEN}" https://api.github.com/repos/magefree/mage/releases/latest)

          asset_url=$(echo "$rel_json" | jq -r '
            (.assets[] | select(.name | test("(?i)^x?mage.*\\.zip$")) | .browser_download_url) // empty
          ')
          if [ -z "$asset_url" ] || [ "$asset_url" = "null" ]; then
            asset_url=$(echo "$rel_json" | jq -r '
              (.assets[] | select(.name | endswith(".zip")) | .browser_download_url) // empty
            ')
          fi

          echo "Downloading: $asset_url"
          curl -L -H "Authorization: Bearer ${GH_TOKEN}" -o base-xmage.zip "$asset_url"

          mkdir -p work
          unzip -q base-xmage.zip -d work

          XMAGE_DIR=$(find work -maxdepth 1 -mindepth 1 -type d | head -n 1)
          echo "Base directory: $XMAGE_DIR"

          unzip -o -q Mage.Client/target/mage-client.zip -d "$XMAGE_DIR"
          unzip -o -q Mage.Server/target/mage-server.zip -d "$XMAGE_DIR"

          (cd work && zip -qr ../mage-nightly.zip .)

          ls -lh mage-nightly.zip

      - name: Compute nightly tag
        id: tag
        run: |
          DATE_UTC=$(date -u +'%Y-%m-%d')
          TAG="nightly-${DATE_UTC}-${GITHUB_RUN_NUMBER}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "title=Nightly ${DATE_UTC}" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.title }}
          prerelease: true
          body: |
            Nightly Build of XMage.

            Only run Update once to install Java. Running a second time will overwrite with latest official release.
          files: |
            Mage.Client/target/mage-client.zip
            Mage.Server/target/mage-server.zip
            mage-nightly.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
